Index: app/src/main/java/com/letyouknow/view/dealnearyou/OneDealNearYouFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.letyouknow.view.dealnearyou\r\n\r\nimport android.app.Dialog\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.text.*\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.view.animation.Animation\r\nimport android.view.animation.AnimationUtils\r\nimport android.widget.AdapterView\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.google.gson.Gson\r\nimport com.google.gson.JsonArray\r\nimport com.google.gson.reflect.TypeToken\r\nimport com.letyouknow.R\r\nimport com.letyouknow.base.BaseFragment\r\nimport com.letyouknow.databinding.FragmentOneDealNearYouBinding\r\nimport com.letyouknow.model.*\r\nimport com.letyouknow.retrofit.ApiConstant\r\nimport com.letyouknow.retrofit.viewmodel.*\r\nimport com.letyouknow.utils.AppGlobal\r\nimport com.letyouknow.utils.AppGlobal.Companion.alertError\r\nimport com.letyouknow.utils.AppGlobal.Companion.isEmpty\r\nimport com.letyouknow.utils.Constant\r\nimport com.letyouknow.utils.Constant.Companion.ARG_LCD_DEAL_GUEST\r\nimport com.letyouknow.view.dashboard.MainActivity\r\nimport com.letyouknow.view.lcd.summary.LCDDealSummaryStep1Activity\r\nimport com.letyouknow.view.spinneradapter.*\r\nimport kotlinx.android.synthetic.main.dialog_highlight_inventory.*\r\nimport kotlinx.android.synthetic.main.dialog_mobile_no.*\r\nimport kotlinx.android.synthetic.main.dialog_vehicle_options.*\r\nimport kotlinx.android.synthetic.main.dialog_vehicle_packages.*\r\nimport kotlinx.android.synthetic.main.fragment_one_deal_near_you.*\r\nimport org.jetbrains.anko.support.v4.startActivity\r\nimport java.lang.reflect.Type\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass OneDealNearYouFragment : BaseFragment(), View.OnClickListener,\r\n    AdapterView.OnItemSelectedListener {\r\n    private var isValidZipCode = false\r\n\r\n    private lateinit var promotionViewModel: PromotionViewModel\r\n    private lateinit var vehicleYearModel: VehicleYearViewModel\r\n    private lateinit var vehicleMakeModel: VehicleMakeViewModel\r\n    private lateinit var vehicleModelModel: VehicleModelViewModel\r\n    private lateinit var vehicleTrimModel: VehicleTrimViewModel\r\n    private lateinit var exteriorColorModel: ExteriorColorViewModel\r\n    private lateinit var interiorColorModel: InteriorColorViewModel\r\n    private lateinit var zipCodeModel: VehicleZipCodeViewModel\r\n    private lateinit var packagesModel: VehiclePackagesViewModel\r\n    private lateinit var checkedPackageModel: CheckedPackageInventoryViewModel\r\n    private lateinit var packagesOptional: VehicleOptionalViewModel\r\n    private lateinit var checkedAccessoriesModel: CheckedAccessoriesInventoryViewModel\r\n    private lateinit var findLCDDealGuestViewModel: FindLCDDealViewModel\r\n    private lateinit var tokenModel: RefreshTokenViewModel\r\n\r\n    private lateinit var adapterYear: YearSpinnerAdapter\r\n    private lateinit var adapterMake: MakeSpinnerAdapter\r\n    private lateinit var adapterModel: ModelSpinnerAdapter\r\n    private lateinit var adapterTrim: TrimsSpinnerAdapter\r\n    private lateinit var adapterExterior: ExteriorSpinnerAdapter\r\n    private lateinit var adapterInterior: InteriorSpinnerAdapter\r\n    private lateinit var adapterPackages: PackagesAdapter\r\n    private lateinit var adapterOptions: OptionsAdapter\r\n\r\n\r\n    private var productId = \"2\"\r\n    private var yearId = \"\"\r\n    private var makeId = \"\"\r\n\r\n    private var modelId = \"\"\r\n    private var trimId = \"\"\r\n    private var extColorId = \"\"\r\n    private var intColorId = \"\"\r\n\r\n    private var yearStr = \"YEAR - NEW CARS\"\r\n    private var makeStr = \"MAKE\"\r\n    private var modelStr = \"MODEL\"\r\n    private var trimStr = \"TRIM\"\r\n    private var intColorStr = \"INTERIOR COLOR\"\r\n    private var extColorStr = \"EXTERIOR COLOR\"\r\n\r\n    private lateinit var animBlink: Animation\r\n    private lateinit var animSlideRightToLeft: Animation\r\n    private lateinit var animSlideLeftToRight: Animation\r\n\r\n\r\n    private lateinit var binding: FragmentOneDealNearYouBinding\r\n    private var upDownData = UpDownData()\r\n\r\n    private lateinit var prefOneDealNearYouData: PrefOneDealNearYouData\r\n    private lateinit var socialMobileViewModel: SocialMobileViewModel\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(\r\n            inflater,\r\n            R.layout.fragment_one_deal_near_you,\r\n            container,\r\n            false\r\n        )\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        init()\r\n    }\r\n\r\n    private fun init() {\r\n        try {\r\n            animBlink = AnimationUtils.loadAnimation(\r\n                requireActivity(),\r\n                R.anim.anim_blink\r\n            )\r\n            animSlideRightToLeft = AnimationUtils.loadAnimation(\r\n                requireActivity(),\r\n                R.anim.anim_slide_in_right\r\n            )\r\n            animSlideLeftToRight = AnimationUtils.loadAnimation(\r\n                requireActivity(),\r\n                R.anim.anim_slide_in_left\r\n            )\r\n            tvPromo.startAnimation(animBlink)\r\n            binding.upDownData = upDownData\r\n            promotionViewModel = ViewModelProvider(this)[PromotionViewModel::class.java]\r\n            vehicleYearModel = ViewModelProvider(this)[VehicleYearViewModel::class.java]\r\n            vehicleMakeModel = ViewModelProvider(this)[VehicleMakeViewModel::class.java]\r\n            vehicleModelModel = ViewModelProvider(this)[VehicleModelViewModel::class.java]\r\n            vehicleTrimModel = ViewModelProvider(this)[VehicleTrimViewModel::class.java]\r\n            exteriorColorModel = ViewModelProvider(this)[ExteriorColorViewModel::class.java]\r\n            interiorColorModel = ViewModelProvider(this)[InteriorColorViewModel::class.java]\r\n            zipCodeModel = ViewModelProvider(this)[VehicleZipCodeViewModel::class.java]\r\n            packagesModel = ViewModelProvider(this)[VehiclePackagesViewModel::class.java]\r\n            packagesOptional = ViewModelProvider(this)[VehicleOptionalViewModel::class.java]\r\n            tokenModel = ViewModelProvider(this)[RefreshTokenViewModel::class.java]\r\n            checkedPackageModel =\r\n                ViewModelProvider(this)[CheckedPackageInventoryViewModel::class.java]\r\n            checkedAccessoriesModel =\r\n                ViewModelProvider(this)[CheckedAccessoriesInventoryViewModel::class.java]\r\n            findLCDDealGuestViewModel =\r\n                ViewModelProvider(this)[FindLCDDealViewModel::class.java]\r\n            socialMobileViewModel =\r\n                ViewModelProvider(this)[SocialMobileViewModel::class.java]\r\n\r\n            btnSearch.setOnClickListener(this)\r\n            MainActivity.getInstance().setVisibleEditImg(false)\r\n            MainActivity.getInstance().setVisibleLogoutImg(false)\r\n            tvPromo.setOnClickListener(this)\r\n            ivClosePromo.setOnClickListener(this)\r\n            tvYear.setOnClickListener(this)\r\n\r\n            setPrefOneDealNearYouData()\r\n            edtZipCode.inputType = InputType.TYPE_CLASS_NUMBER\r\n            callPromotionAPI()\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        if (Constant.isInitProgress() && Constant.progress.isShowing)\r\n            Constant.dismissLoader()\r\n        super.onResume()\r\n        startHandler()\r\n    }\r\n\r\n    private fun onChangeZipCode() {\r\n        edtZipCode.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n                val str = s.toString()\r\n                if (str.length == 5) {\r\n                    if (prefOneDealNearYouData.zipCode != edtZipCode.text.toString().trim()) {\r\n                        prefOneDealNearYouData.yearId = \"\"\r\n                        prefOneDealNearYouData.makeId = \"\"\r\n                        prefOneDealNearYouData.modelId = \"\"\r\n                        prefOneDealNearYouData.trimId = \"\"\r\n                        prefOneDealNearYouData.extColorId = \"\"\r\n                        prefOneDealNearYouData.intColorId = \"\"\r\n                        prefOneDealNearYouData.yearStr = \"\"\r\n                        prefOneDealNearYouData.makeStr = \"\"\r\n                        prefOneDealNearYouData.modelStr = \"\"\r\n                        prefOneDealNearYouData.trimStr = \"\"\r\n                        prefOneDealNearYouData.extColorStr = \"\"\r\n                        prefOneDealNearYouData.intColorStr = \"\"\r\n                        prefOneDealNearYouData.packagesData = ArrayList()\r\n                        prefOneDealNearYouData.optionsData = ArrayList()\r\n                    }\r\n                    callVehicleZipCodeAPI(str)\r\n                } else if (str.length < 5) {\r\n                    isValidZipCode = false\r\n                    prefOneDealNearYouData.isZipCode = isValidZipCode!!\r\n                    tvErrorZipCode.visibility = View.GONE\r\n                    edtZipCode.setBackgroundResource(R.drawable.bg_edittext_dark)\r\n                }\r\n                prefOneDealNearYouData.zipCode = edtZipCode.text.toString().trim()\r\n\r\n                setPrefData()\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    private lateinit var handler: Handler\r\n    private fun setPrefData() {\r\n        pref?.setOneDealNearYouData(Gson().toJson(prefOneDealNearYouData))\r\n        setCurrentTime()\r\n    }\r\n\r\n    private fun setCurrentTime() {\r\n        val df = SimpleDateFormat(\"yyyy MM d, HH:mm:ss a\")\r\n        val date = df.format(Calendar.getInstance().time)\r\n        pref?.setOneDealNearYou(date)\r\n        //  Log.e(\"Submit Date\", date)\r\n        startHandler()\r\n    }\r\n\r\n    private fun startHandler() {\r\n        if (!isEmpty(pref?.getOneDealNearYou())) {\r\n            //  Log.e(\"Date Time\", AppGlobal.stringToDate(pref?.getOneDealNearYou())?.toString()!!)\r\n            handler = Handler()\r\n            handler.postDelayed(runnable, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    private var runnable = object : Runnable {\r\n        override fun run() {\r\n            val date = Calendar.getInstance().time\r\n\r\n            val lastDate = AppGlobal.stringToDate(pref?.getOneDealNearYou())\r\n\r\n            val diff: Long = date.time - (lastDate?.time ?: 0)\r\n            print(diff)\r\n\r\n            val seconds = diff / 1000\r\n            val minutes = seconds / 60\r\n            if (minutes >= 30) {\r\n                handler.removeCallbacks(this)\r\n                pref?.setOneDealNearYouData(Gson().toJson(PrefOneDealNearYouData()))\r\n                pref?.setOneDealNearYou(\"\")\r\n                setPrefOneDealNearYouData()\r\n            } else {\r\n                handler.postDelayed(this, 1000)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setYear() {\r\n        try {\r\n            spYear.isEnabled = false\r\n            val arData = ArrayList<VehicleYearData>()\r\n            val yearData = VehicleYearData()\r\n            yearData.year = \"YEAR - NEW CARS\"\r\n            arData.add(0, yearData)\r\n            adapterYear = YearSpinnerAdapter(requireActivity(), arData)\r\n            spYear.adapter = adapterYear\r\n            AppGlobal.setSpinnerLayoutPos(0, spYear, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setMake() {\r\n        try {\r\n            spMake.isEnabled = false\r\n            val arData = ArrayList<VehicleMakeData>()\r\n            val makeData = VehicleMakeData()\r\n            makeData.make = \"MAKE\"\r\n            arData.add(0, makeData)\r\n            adapterMake = MakeSpinnerAdapter(requireActivity(), arData)\r\n            spMake.adapter = adapterMake\r\n            AppGlobal.setSpinnerLayoutPos(0, spMake, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setModel() {\r\n        try {\r\n            spModel.isEnabled = false\r\n            val arData = ArrayList<VehicleModelData>()\r\n            val modelData = VehicleModelData()\r\n            modelData.model = \"MODEL\"\r\n            arData.add(0, modelData)\r\n            adapterModel = ModelSpinnerAdapter(requireActivity(), arData)\r\n            spModel.adapter = adapterModel\r\n            AppGlobal.setSpinnerLayoutPos(0, spModel, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setTrim() {\r\n        try {\r\n            spTrim.isEnabled = false\r\n            val arData = ArrayList<VehicleTrimData>()\r\n            val trimData = VehicleTrimData()\r\n            trimData.trim = \"TRIM\"\r\n            arData.add(0, trimData)\r\n            adapterTrim = TrimsSpinnerAdapter(requireActivity(), arData)\r\n            spTrim.adapter = adapterTrim\r\n            AppGlobal.setSpinnerLayoutPos(0, spTrim, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setExteriorColor() {\r\n        try {\r\n            spExteriorColor.isEnabled = false\r\n            val arData = ArrayList<ExteriorColorData>()\r\n            val trimData = ExteriorColorData()\r\n            trimData.exteriorColor = \"EXTERIOR COLOR\"\r\n            arData.add(0, trimData)\r\n            adapterExterior = ExteriorSpinnerAdapter(requireActivity(), arData)\r\n            spExteriorColor.adapter = adapterExterior\r\n            AppGlobal.setSpinnerLayoutPos(0, spExteriorColor, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setInteriorColor() {\r\n        try {\r\n            spInteriorColor.isEnabled = false\r\n            val arData = ArrayList<InteriorColorData>()\r\n            val interiorData = InteriorColorData()\r\n            interiorData.interiorColor = \"INTERIOR COLOR\"\r\n            arData.add(0, interiorData)\r\n            adapterInterior = InteriorSpinnerAdapter(requireActivity(), arData)\r\n            spInteriorColor.adapter = adapterInterior\r\n            AppGlobal.setSpinnerLayoutPos(0, spInteriorColor, requireActivity())\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setPackages(isEnable: Boolean) {\r\n        try {\r\n            tvPackages.text = \"PACKAGES\"\r\n            if (isEnable) {\r\n                tvPackages.isEnabled = true\r\n                tvPackages.setOnClickListener(this)\r\n            } else {\r\n                tvPackages.isEnabled = false\r\n                tvPackages.setOnClickListener(null)\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun setOptions(isEnable: Boolean) {\r\n        try {\r\n            tvOptionalAccessories.text = \"OPTIONS & ACCESSORIES\"\r\n            if (isEnable) {\r\n                tvOptionalAccessories.isEnabled = true\r\n                tvOptionalAccessories.setOnClickListener(this)\r\n            } else {\r\n                tvOptionalAccessories.isEnabled = false\r\n                tvOptionalAccessories.setOnClickListener(null)\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private fun callVehicleZipCodeAPI(zipCode: String?) {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                zipCodeModel.getZipCode(requireActivity(), zipCode)!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        //Log.e(\"ZipCode Data\", Gson().toJson(data))\r\n                        try {\r\n                            if (!data) {\r\n                                edtZipCode.setBackgroundResource(R.drawable.bg_edittext_dark_error)\r\n                                tvErrorZipCode.visibility = View.VISIBLE\r\n                                setYear()\r\n                                setMake()\r\n                                setModel()\r\n                                setTrim()\r\n                                setExteriorColor()\r\n                                setInteriorColor()\r\n                                setPackages(false)\r\n                                setOptions(false)\r\n                            } else {\r\n                                tvErrorZipCode.visibility = View.GONE\r\n                                callVehicleYearAPI()\r\n                            }\r\n                            isValidZipCode = data\r\n                            prefOneDealNearYouData.isZipCode = isValidZipCode!!\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callVehicleYearAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                vehicleYearModel.getYear(\r\n                    requireActivity(),\r\n                    productId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(\r\n                        requireActivity()\r\n                    ) { data ->\r\n                        if (isEmpty(prefOneDealNearYouData.makeId))\r\n                            Constant.dismissLoader()\r\n                        try {\r\n                            // Log.e(\"Year Data\", Gson().toJson(data))\r\n                            if (!data.isNullOrEmpty()) {\r\n                                spYear.isEnabled = true\r\n                                tvYear.visibility = View.GONE\r\n                                spYear.visibility = View.VISIBLE\r\n                                val yearData = VehicleYearData()\r\n                                yearData.year = \"YEAR - NEW CARS\"\r\n                                data.add(0, yearData)\r\n                                adapterYear = YearSpinnerAdapter(requireActivity(), data)\r\n                                spYear.adapter = adapterYear\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.yearId) && prefOneDealNearYouData.yearId == data[i].vehicleYearID) {\r\n                                        spYear.setSelection(i, true)\r\n                                        AppGlobal.setSpinnerLayoutPos(i, spYear, requireActivity())\r\n                                        callVehicleMakeAPI()\r\n                                    }\r\n                                }\r\n                                spYear.onItemSelectedListener = this\r\n                            } else {\r\n                                tvYear.visibility = View.VISIBLE\r\n                                spYear.visibility = View.GONE\r\n                                val arData = ArrayList<VehicleYearData>()\r\n                                val yearData = VehicleYearData()\r\n                                yearData.year = \"YEAR - NEW CARS\"\r\n                                arData.add(0, yearData)\r\n                                adapterYear = YearSpinnerAdapter(requireActivity(), arData)\r\n                                spYear.adapter = adapterYear\r\n                                spYear.onItemSelectedListener = this\r\n                                AppGlobal.setNoData(requireActivity(), spYear)\r\n                                setClearData()\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callVehicleMakeAPI() {\r\n        try {\r\n            spMake.isEnabled = true\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (isEmpty(prefOneDealNearYouData.makeId)) {\r\n                    if (!Constant.isInitProgress()) {\r\n                        Constant.showLoader(requireActivity())\r\n                    } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                        Constant.showLoader(requireActivity())\r\n                    }\r\n                }\r\n\r\n                vehicleMakeModel.getMake(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        if (isEmpty(prefOneDealNearYouData.modelId))\r\n                            Constant.dismissLoader()\r\n                        try {\r\n                            Log.e(\"Make Data\", Gson().toJson(data))\r\n                            if (!data.isNullOrEmpty()) {\r\n                                val makeData = VehicleMakeData()\r\n                                makeData.make = \"MAKE\"\r\n                                data.add(0, makeData)\r\n                                adapterMake = MakeSpinnerAdapter(requireActivity(), data)\r\n                                spMake.adapter = adapterMake\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.makeId) && prefOneDealNearYouData.makeId == data[i].vehicleMakeID) {\r\n                                        spMake.setSelection(i, true)\r\n                                        callVehicleModelAPI()\r\n                                        AppGlobal.setSpinnerLayoutPos(i, spMake, requireActivity())\r\n                                    }\r\n                                }\r\n                                spMake.onItemSelectedListener = this\r\n                            } else {\r\n                                val arData = ArrayList<VehicleMakeData>()\r\n                                val makeData = VehicleMakeData()\r\n                                makeData.make = \"MAKE\"\r\n                                arData.add(0, makeData)\r\n                                adapterMake = MakeSpinnerAdapter(requireActivity(), arData)\r\n                                spMake.adapter = adapterMake\r\n                                spMake.onItemSelectedListener = this\r\n                                AppGlobal.setNoData(requireActivity(), spMake)\r\n                                setClearData()\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callVehicleModelAPI() {\r\n        try {\r\n            spModel.isEnabled = true\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (isEmpty(prefOneDealNearYouData.modelId)) {\r\n                    if (!Constant.isInitProgress()) {\r\n                        Constant.showLoader(requireActivity())\r\n                    } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                        Constant.showLoader(requireActivity())\r\n                    }\r\n                }\r\n                vehicleModelModel.getModel(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    makeId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        if (isEmpty(prefOneDealNearYouData.trimId))\r\n                            Constant.dismissLoader()\r\n                        //   Log.e(\"Make Data\", Gson().toJson(data))\r\n                        try {\r\n                            if (!data.isNullOrEmpty()) {\r\n                                val modelData = VehicleModelData()\r\n                                modelData.model = \"MODEL\"\r\n                                data.add(0, modelData)\r\n                                adapterModel = ModelSpinnerAdapter(requireActivity(), data)\r\n                                spModel.adapter = adapterModel\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.modelId) && prefOneDealNearYouData.modelId == data[i].vehicleModelID) {\r\n                                        spModel.setSelection(i, true)\r\n                                        callVehicleTrimAPI()\r\n                                        AppGlobal.setSpinnerLayoutPos(i, spModel, requireActivity())\r\n                                    }\r\n                                }\r\n                                spModel.onItemSelectedListener = this\r\n                            } else {\r\n                                val arData = ArrayList<VehicleModelData>()\r\n                                val modelData = VehicleModelData()\r\n                                modelData.model = \"MODEL\"\r\n                                arData.add(0, modelData)\r\n                                adapterModel = ModelSpinnerAdapter(requireActivity(), arData)\r\n                                spModel.adapter = adapterModel\r\n                                spModel.onItemSelectedListener = this\r\n                                AppGlobal.setNoData(requireActivity(), spModel)\r\n                                setClearData()\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callVehicleTrimAPI() {\r\n        try {\r\n            spTrim.isEnabled = true\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (isEmpty(prefOneDealNearYouData.trimId)) {\r\n                    if (!Constant.isInitProgress()) {\r\n                        Constant.showLoader(requireActivity())\r\n                    } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                        Constant.showLoader(requireActivity())\r\n                    }\r\n                }\r\n\r\n                vehicleTrimModel.getTrim(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    makeId,\r\n                    modelId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        if (isEmpty(prefOneDealNearYouData.extColorId))\r\n                            Constant.dismissLoader()\r\n                        Log.e(\"Make Data\", Gson().toJson(data))\r\n                        try {\r\n                            if (!data.isNullOrEmpty()) {\r\n                                val trimData = VehicleTrimData()\r\n                                trimData.trim = \"TRIM\"\r\n                                data.add(0, trimData)\r\n                                adapterTrim = TrimsSpinnerAdapter(requireActivity(), data)\r\n                                spTrim.adapter = adapterTrim\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.trimId) && prefOneDealNearYouData.trimId == data[i].vehicleTrimID) {\r\n                                        spTrim.setSelection(i, true)\r\n                                        callExteriorColorAPI()\r\n                                        AppGlobal.setSpinnerLayoutPos(i, spTrim, requireActivity())\r\n                                    }\r\n                                }\r\n                                spTrim.onItemSelectedListener = this\r\n                            } else {\r\n                                val arData = ArrayList<VehicleTrimData>()\r\n                                val trimData = VehicleTrimData()\r\n                                trimData.trim = \"TRIM\"\r\n                                arData.add(0, trimData)\r\n                                adapterTrim = TrimsSpinnerAdapter(requireActivity(), arData)\r\n                                spTrim.adapter = adapterTrim\r\n                                spTrim.onItemSelectedListener = this\r\n                                AppGlobal.setNoData(requireActivity(), spTrim)\r\n                                setClearData()\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callExteriorColorAPI() {\r\n        try {\r\n            spExteriorColor.isEnabled = true\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (isEmpty(prefOneDealNearYouData.extColorId)) {\r\n                    if (!Constant.isInitProgress()) {\r\n                        Constant.showLoader(requireActivity())\r\n                    } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                        Constant.showLoader(requireActivity())\r\n                    }\r\n                }\r\n\r\n                exteriorColorModel.getExteriorColor(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    makeId,\r\n                    modelId,\r\n                    trimId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        if (isEmpty(prefOneDealNearYouData.intColorId))\r\n                            Constant.dismissLoader()\r\n                        try {\r\n                            // Log.e(\"Make Data\", Gson().toJson(data))\r\n                            if (data != null || data?.size!! > 0) {\r\n                                val exteriorColorData = ExteriorColorData()\r\n                                exteriorColorData.exteriorColor = \"EXTERIOR COLOR\"\r\n                                data.add(0, exteriorColorData)\r\n                                val exteriorColorData1 = ExteriorColorData()\r\n                                exteriorColorData1.vehicleExteriorColorID = \"0\"\r\n                                exteriorColorData1.exteriorColor = \"ANY\"\r\n                                data.add(1, exteriorColorData1)\r\n                                adapterExterior = ExteriorSpinnerAdapter(requireActivity(), data)\r\n                                spExteriorColor.adapter = adapterExterior\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.extColorId) && prefOneDealNearYouData.extColorId == data[i].vehicleExteriorColorID) {\r\n                                        spExteriorColor.setSelection(i, true)\r\n                                        callInteriorColorAPI()\r\n                                        AppGlobal.setSpinnerLayoutPos(\r\n                                            i,\r\n                                            spExteriorColor,\r\n                                            requireActivity()\r\n                                        )\r\n                                    }\r\n                                }\r\n                                spExteriorColor.onItemSelectedListener = this\r\n                            } else {\r\n                                val arData = ArrayList<ExteriorColorData>()\r\n                                val exteriorColorData = ExteriorColorData()\r\n                                exteriorColorData.exteriorColor = \"EXTERIOR COLOR\"\r\n                                arData.add(0, exteriorColorData)\r\n                                val exteriorColorData1 = ExteriorColorData()\r\n                                exteriorColorData1.vehicleExteriorColorID = \"0\"\r\n                                exteriorColorData1.exteriorColor = \"ANY\"\r\n                                arData.add(1, exteriorColorData1)\r\n                                adapterExterior = ExteriorSpinnerAdapter(requireActivity(), arData)\r\n                                spExteriorColor.adapter = adapterExterior\r\n                                spExteriorColor.onItemSelectedListener = this\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callInteriorColorAPI() {\r\n        try {\r\n            spInteriorColor.isEnabled = true\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (isEmpty(prefOneDealNearYouData.intColorId)) {\r\n                    if (!Constant.isInitProgress()) {\r\n                        Constant.showLoader(requireActivity())\r\n                    } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                        Constant.showLoader(requireActivity())\r\n                    }\r\n                }\r\n                interiorColorModel.getInteriorColor(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    makeId,\r\n                    modelId,\r\n                    trimId,\r\n                    extColorId,\r\n                    edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        try {\r\n                            // Log.e(\"Make Data\", Gson().toJson(data))\r\n                            if (data != null || data?.size!! > 0) {\r\n                                val interiorColorData = InteriorColorData()\r\n                                interiorColorData.interiorColor = \"INTERIOR COLOR\"\r\n                                data.add(0, interiorColorData)\r\n                                val interiorColorData1 = InteriorColorData()\r\n                                interiorColorData1.vehicleInteriorColorID = \"0\"\r\n                                interiorColorData1.interiorColor = \"ANY\"\r\n                                data.add(1, interiorColorData1)\r\n                                adapterInterior = InteriorSpinnerAdapter(requireActivity(), data)\r\n                                spInteriorColor.adapter = adapterInterior\r\n                                for (i in 0 until data.size) {\r\n                                    if (!isEmpty(prefOneDealNearYouData.intColorId) && prefOneDealNearYouData.intColorId == data[i].vehicleInteriorColorID) {\r\n                                        spInteriorColor.setSelection(i, true)\r\n                                        AppGlobal.setSpinnerLayoutPos(\r\n                                            i,\r\n                                            spInteriorColor,\r\n                                            requireActivity()\r\n                                        )\r\n                                        if (!prefOneDealNearYouData.packagesData.isNullOrEmpty()) {\r\n                                            popupPackages(prefOneDealNearYouData.packagesData!!)\r\n                                            setPackages(true)\r\n                                            var packagesStr = \"\"\r\n                                            var isFirst = true\r\n                                            for (i in 0 until adapterPackages.itemCount) {\r\n                                                if (adapterPackages.getItem(i).isSelect == true || adapterPackages.getItem(\r\n                                                        i\r\n                                                    ).isOtherSelect == true\r\n                                                ) {\r\n                                                    if (isFirst) {\r\n                                                        packagesStr =\r\n                                                            adapterPackages.getItem(i).packageName.toString()\r\n                                                        isFirst = false\r\n                                                    } else {\r\n                                                        packagesStr =\r\n                                                            packagesStr + \", \" + adapterPackages.getItem(\r\n                                                                i\r\n                                                            ).packageName.toString()\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if (packagesStr.length > 0) {\r\n                                                tvPackages.text = packagesStr\r\n                                                tvErrorPackages.visibility = View.GONE\r\n//                                            setOptions(true)\r\n//                                            callOptionalAccessoriesAPI()\r\n                                            } else {\r\n                                                tvPackages.text = \"PACKAGES\"\r\n                                                setOptions(false)\r\n                                            }\r\n                                            if (!prefOneDealNearYouData.optionsData.isNullOrEmpty()) {\r\n                                                popupOptions(prefOneDealNearYouData.optionsData!!)\r\n                                                setOptions(true)\r\n                                                var optionsStr = \"\"\r\n                                                var isFirst = true\r\n                                                for (i in 0 until adapterOptions.itemCount) {\r\n                                                    if (adapterOptions.getItem(i).isSelect == true || adapterOptions.getItem(\r\n                                                            i\r\n                                                        ).isOtherSelect == true\r\n                                                    ) {\r\n                                                        if (isFirst) {\r\n                                                            optionsStr =\r\n                                                                adapterOptions.getItem(i).accessory.toString()\r\n                                                            isFirst = false\r\n                                                        } else {\r\n                                                            optionsStr =\r\n                                                                optionsStr + \", \" + adapterOptions.getItem(\r\n                                                                    i\r\n                                                                ).accessory.toString()\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                if (!TextUtils.isEmpty(optionsStr)) {\r\n                                                    tvErrorOptionsAccessories.visibility = View.GONE\r\n                                                    tvOptionalAccessories.text = optionsStr\r\n                                                } else {\r\n                                                    tvOptionalAccessories.text =\r\n                                                        \"OPTIONS & ACCESSORIES\"\r\n                                                }\r\n\r\n                                            } else {\r\n                                                callOptionalAccessoriesAPI()\r\n                                                setOptions(true)\r\n                                            }\r\n                                        } else {\r\n                                            callVehiclePackagesAPI()\r\n                                            setPackages(true)\r\n\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                                spInteriorColor.onItemSelectedListener = this\r\n                            } else {\r\n                                val arData = ArrayList<InteriorColorData>()\r\n                                val interiorColorData = InteriorColorData()\r\n                                interiorColorData.interiorColor = \"INTERIOR COLOR\"\r\n                                arData.add(0, interiorColorData)\r\n                                val interiorColorData1 = InteriorColorData()\r\n                                interiorColorData1.vehicleInteriorColorID = \"0\"\r\n                                interiorColorData1.interiorColor = \"ANY\"\r\n                                arData.add(1, interiorColorData1)\r\n                                adapterInterior = InteriorSpinnerAdapter(requireActivity(), arData)\r\n                                spInteriorColor.adapter = adapterInterior\r\n                                spInteriorColor.onItemSelectedListener = this\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callVehiclePackagesAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                packagesModel.getPackages(\r\n                    requireActivity(),\r\n                    productId,\r\n                    yearId,\r\n                    makeId,\r\n                    modelId,\r\n                    trimId,\r\n                    extColorId,\r\n                    intColorId, edtZipCode.text.toString().trim()\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        //Log.e(\"Make Data\", Gson().toJson(data))\r\n                        try {\r\n                            if (data != null || data?.size!! > 0) {\r\n                                val packagesData = VehiclePackagesData()\r\n                                packagesData.vehiclePackageID = \"0\"\r\n                                packagesData.packageName = \"ANY\"\r\n                                data.add(0, packagesData)\r\n                                popupPackages(data)\r\n\r\n                            } else {\r\n                                val arData = ArrayList<VehiclePackagesData>()\r\n                                val packagesData = VehiclePackagesData()\r\n                                packagesData.vehiclePackageID = \"0\"\r\n                                packagesData.packageName = \"ANY\"\r\n                                arData.add(0, packagesData)\r\n                                popupPackages(arData)\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callOptionalAccessoriesAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                val jsonArray = JsonArray()\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    if (adapterPackages.getItem(i).isSelect!! || adapterPackages.getItem(i).isOtherSelect!!) {\r\n                        jsonArray.add(adapterPackages.getItem(i).vehiclePackageID)\r\n                    }\r\n                }\r\n                val request = HashMap<String, Any>()\r\n                request[ApiConstant.packageList] = jsonArray\r\n                request[ApiConstant.productId] = productId\r\n                request[ApiConstant.yearId] = yearId\r\n                request[ApiConstant.makeId] = makeId\r\n                request[ApiConstant.modelId] = modelId\r\n                request[ApiConstant.trimId] = trimId\r\n                request[ApiConstant.exteriorColorId] = extColorId\r\n                request[ApiConstant.interiorColorId] = intColorId\r\n                request[ApiConstant.zipCode] = edtZipCode.text.toString().trim()\r\n\r\n                packagesOptional.getOptional(\r\n                    requireActivity(),\r\n                    request\r\n                )!!\r\n                    .observe(requireActivity(), Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        try {\r\n                            //  Log.e(\"Make Data\", Gson().toJson(data))\r\n                            if (data != null || data?.size!! > 0) {\r\n                                val accessoriesData = VehicleAccessoriesData()\r\n                                accessoriesData.dealerAccessoryID = \"0\"\r\n                                accessoriesData.accessory = \"ANY\"\r\n                                data.add(0, accessoriesData)\r\n                                popupOptions(data)\r\n                            } else {\r\n                                val arData = ArrayList<VehicleAccessoriesData>()\r\n                                val accessoriesData = VehicleAccessoriesData()\r\n                                accessoriesData.dealerAccessoryID = \"0\"\r\n                                accessoriesData.accessory = \"ANY\"\r\n                                arData.add(0, accessoriesData)\r\n                                popupOptions(arData)\r\n                            }\r\n                        } catch (e: Exception) {\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private var hasMatchPackage = false\r\n    private fun callCheckedPackageAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                val jsonArray = JsonArray()\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    if (adapterPackages.getItem(i).isSelect!! || adapterPackages.getItem(i).isOtherSelect!!) {\r\n                        jsonArray.add(adapterPackages.getItem(i).vehiclePackageID)\r\n                    }\r\n                }\r\n                val request = HashMap<String, Any>()\r\n                request[ApiConstant.checkedList] = jsonArray\r\n                request[ApiConstant.productId] = productId\r\n                request[ApiConstant.yearId] = yearId\r\n                request[ApiConstant.makeId] = makeId\r\n                request[ApiConstant.modelId] = modelId\r\n                request[ApiConstant.trimId] = trimId\r\n                request[ApiConstant.exteriorColorId] = extColorId\r\n                request[ApiConstant.interiorColorId] = intColorId\r\n                request[ApiConstant.zipCode] = edtZipCode.text.toString().trim()\r\n\r\n                checkedPackageModel.checkedPackage(requireActivity(), request)!!\r\n                    .observe(this, Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        hasMatchPackage = data.hasMatch!!\r\n                        if (data.status == 1) {\r\n                            prefOneDealNearYouData.packagesData = ArrayList()\r\n                            setPrefData()\r\n                            setPackages(true)\r\n                            alertError(requireActivity(), getString(R.string.market_hot_msg))\r\n                            if (::dialogOptions.isInitialized)\r\n                                dialogOptions.dismiss()\r\n                        } else {\r\n\r\n                            if (data.status == 0 || data.status == 3) {\r\n                                showHighlightedDialog()\r\n                            }\r\n\r\n                            if (!data.autoCheckList.isNullOrEmpty()) {\r\n                                for (i in 0 until data.autoCheckList.size) {\r\n                                    for (j in 0 until adapterPackages.itemCount) {\r\n                                        if (adapterPackages.getItem(j).vehiclePackageID == data.autoCheckList[i]) {\r\n                                            val dataCheck = adapterPackages.getItem(j)\r\n                                            dataCheck.isGray = false\r\n                                            dataCheck.isOtherSelect = true\r\n                                            adapterPackages.update(j, dataCheck)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (!data.grayOutList.isNullOrEmpty()) {\r\n                                for (i in 0 until data.grayOutList.size) {\r\n                                    for (j in 0 until adapterPackages.itemCount) {\r\n                                        if (adapterPackages.getItem(j).vehiclePackageID == data.grayOutList[i]) {\r\n                                            val dataGray = adapterPackages.getItem(j)\r\n                                            dataGray.isGray = true\r\n                                            adapterPackages.update(j, dataGray)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private var hasMatchOptions = false\r\n    private fun callCheckedAccessoriesAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                if (!Constant.isInitProgress()) {\r\n                    Constant.showLoader(requireActivity())\r\n                } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                    Constant.showLoader(requireActivity())\r\n                }\r\n                val jsonArray = JsonArray()\r\n                for (i in 0 until adapterOptions.itemCount) {\r\n                    if (adapterOptions.getItem(i).isSelect!! || adapterOptions.getItem(i).isOtherSelect!!) {\r\n                        jsonArray.add(adapterOptions.getItem(i).dealerAccessoryID)\r\n                    }\r\n                }\r\n                val jsonArrayPackage = JsonArray()\r\n\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    if (adapterPackages.getItem(i).isSelect!! || adapterPackages.getItem(i).isOtherSelect!!) {\r\n                        jsonArrayPackage.add(adapterPackages.getItem(i).vehiclePackageID)\r\n                    }\r\n                }\r\n                val request = HashMap<String, Any>()\r\n                request[ApiConstant.packageList] = jsonArrayPackage\r\n                request[ApiConstant.checkedList] = jsonArray\r\n                request[ApiConstant.productId] = productId\r\n                request[ApiConstant.yearId] = yearId\r\n                request[ApiConstant.makeId] = makeId\r\n                request[ApiConstant.modelId] = modelId\r\n                request[ApiConstant.trimId] = trimId\r\n                request[ApiConstant.exteriorColorId] = extColorId\r\n                request[ApiConstant.interiorColorId] = intColorId\r\n                request[ApiConstant.zipCode] = edtZipCode.text.toString().trim()\r\n\r\n                checkedAccessoriesModel.checkedAccessories(requireActivity(), request)!!\r\n                    .observe(this, Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        hasMatchOptions = data.hasMatch!!\r\n                        if (data.status == 1) {\r\n                            prefOneDealNearYouData.optionsData = ArrayList()\r\n                            setPrefData()\r\n                            setOptions(true)\r\n                            alertError(requireActivity(), getString(R.string.market_hot_msg))\r\n                            if (::dialogOptions.isInitialized)\r\n                                dialogOptions.dismiss()\r\n\r\n                        } else {\r\n                            if (data.status == 0 || data.status == 3) {\r\n                                showHighlightedDialog()\r\n                            }\r\n                            if (!data.autoCheckList.isNullOrEmpty()) {\r\n                                for (i in 0 until data.autoCheckList.size) {\r\n                                    for (j in 0 until adapterOptions.itemCount) {\r\n                                        if (adapterOptions.getItem(j).dealerAccessoryID == data.autoCheckList[i]) {\r\n                                            val dataCheck = adapterOptions.getItem(j)\r\n                                            dataCheck.isGray = false\r\n                                            dataCheck.isOtherSelect = true\r\n                                            adapterOptions.update(j, dataCheck)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (!data.grayOutList.isNullOrEmpty()) {\r\n                                for (i in 0 until data.grayOutList.size) {\r\n                                    for (j in 0 until adapterOptions.itemCount) {\r\n                                        if (adapterOptions.getItem(j).dealerAccessoryID == data.grayOutList[i]) {\r\n                                            val dataGray = adapterOptions.getItem(j)\r\n                                            dataGray.isGray = true\r\n                                            adapterOptions.update(j, dataGray)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    )\r\n\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun callSearchFindDealAPI() {\r\n        try {\r\n            if (Constant.isOnline(requireActivity())) {\r\n                Constant.showLoader(requireActivity())\r\n                val jsonArrayAccessories = JsonArray()\r\n                var accessoriesStr = \"\"\r\n                var isFirstAcce = true\r\n                val arAccId: ArrayList<String> = ArrayList()\r\n                for (i in 0 until adapterOptions.itemCount) {\r\n                    if (adapterOptions.getItem(i).isSelect!! || adapterOptions.getItem(i).isOtherSelect!!) {\r\n                        jsonArrayAccessories.add(adapterOptions.getItem(i).dealerAccessoryID)\r\n                        arAccId.add(adapterOptions.getItem(i).dealerAccessoryID!!)\r\n                        if (isFirstAcce) {\r\n                            isFirstAcce = false\r\n                            accessoriesStr = adapterOptions.getItem(i).accessory!!\r\n                        } else\r\n                            accessoriesStr += \",\\n\" + adapterOptions.getItem(i).accessory!!\r\n                    }\r\n                }\r\n                val jsonArrayPackage = JsonArray()\r\n                var packageStr = \"\"\r\n                var isFirstPackage = true\r\n                val arPackageId: ArrayList<String> = ArrayList()\r\n\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    if (adapterPackages.getItem(i).isSelect!! || adapterPackages.getItem(i).isOtherSelect!!) {\r\n                        jsonArrayPackage.add(adapterPackages.getItem(i).vehiclePackageID)\r\n                        arPackageId.add(adapterPackages.getItem(i).vehiclePackageID!!)\r\n                        if (isFirstPackage) {\r\n                            isFirstPackage = false\r\n                            packageStr = adapterPackages.getItem(i).packageName!!\r\n                        } else {\r\n                            packageStr =\r\n                                packageStr + \",\\n\" + adapterPackages.getItem(i).packageName!!\r\n                        }\r\n                    }\r\n                }\r\n                val request = HashMap<String, Any>()\r\n                request[ApiConstant.vehicleYearID] = yearId\r\n                request[ApiConstant.vehicleMakeID] = makeId\r\n                request[ApiConstant.vehicleModelID] = modelId\r\n                request[ApiConstant.vehicleTrimID] = trimId\r\n                request[ApiConstant.vehicleExteriorColorID] = extColorId\r\n                request[ApiConstant.vehicleInteriorColorID] = intColorId\r\n                request[ApiConstant.zipCode] = edtZipCode.text.toString().trim()\r\n                request[ApiConstant.dealerAccessoryIDs] = jsonArrayAccessories\r\n                request[ApiConstant.vehiclePackageIDs] = jsonArrayPackage\r\n                // Log.e(\"Request LCDDeal\", Gson().toJson(request))\r\n                findLCDDealGuestViewModel.findDeal(requireActivity(), request)!!\r\n                    .observe(this, Observer { data ->\r\n                        Constant.dismissLoader()\r\n                        // Log.e(\"Response\", Gson().toJson(data))\r\n                        data.productId = productId\r\n                        data.yearId = yearId\r\n                        data.makeId = makeId\r\n                        data.modelId = modelId\r\n                        data.trimId = trimId\r\n                        data.exteriorColorId = extColorId\r\n                        data.interiorColorId = intColorId\r\n                        data.yearStr = yearStr\r\n                        data.makeStr = makeStr\r\n                        data.modelStr = modelStr\r\n                        data.trimStr = trimStr\r\n                        data.exteriorColorStr = extColorStr\r\n                        data.interiorColorStr = intColorStr\r\n                        data.arPackage = packageStr\r\n                        data.arAccessories = accessoriesStr\r\n                        data.arAccessoriesId = arAccId\r\n                        data.arPackageId = arPackageId\r\n                        /* if (data.dealID == \"0\") {\r\n                             showWarningDialog()\r\n                         } else {*/\r\n                        startActivity<LCDDealSummaryStep1Activity>(\r\n                            ARG_LCD_DEAL_GUEST to Gson().toJson(\r\n                                data\r\n                            )\r\n                        )\r\n//                        }\r\n                    }\r\n                    )\r\n            } else {\r\n                Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n            }\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private var arSelectPackage: ArrayList<VehiclePackagesData> = ArrayList()\r\n    private var selectPackageStr = \"\"\r\n\r\n    private var arSelectOption: ArrayList<VehicleAccessoriesData> = ArrayList()\r\n    private var selectOptionStr = \"\"\r\n\r\n\r\n    override fun onClick(v: View?) {\r\n        when (v?.id) {\r\n            R.id.tvPromo -> {\r\n                tvPromo.clearAnimation()\r\n                tvPromo.visibility = View.GONE\r\n                llPromoOffer.visibility = View.VISIBLE\r\n                llPromoOffer.startAnimation(animSlideRightToLeft)\r\n            }\r\n            R.id.ivClosePromo -> {\r\n                llPromoOffer.startAnimation(animSlideLeftToRight)\r\n                Handler().postDelayed({\r\n                    tvPromo.startAnimation(animBlink)\r\n                    tvPromo.visibility = View.VISIBLE\r\n                    llPromoOffer.visibility = View.GONE\r\n                }, 400)\r\n            }\r\n            R.id.btnSearch -> {\r\n                // loadFragment(DealSummeryActivity(), getString(R.string.one_deal_near_you))\r\n                if (isValid()) {\r\n                    if (pref?.getUserData()?.isSocial!!) {\r\n                        if (!pref?.isUpdateSocialMobile()!!) {\r\n                            dialogPhoneNo(true)\r\n                        } else {\r\n                            callSearchFindDealAPI()\r\n                        }\r\n                    } else {\r\n                        callSearchFindDealAPI()\r\n                    }\r\n                }\r\n\r\n//                    callRefreshTokenApi()\r\n            }\r\n            R.id.tvPackages -> {\r\n                if (::adapterPackages.isInitialized) {\r\n                    arSelectPackage = ArrayList()\r\n                    for (i in 0 until adapterPackages.itemCount) {\r\n                        arSelectPackage.add(adapterPackages.getItem(i))\r\n                    }\r\n                    selectPackageStr = Gson().toJson(arSelectPackage)\r\n                    dialogPackage.show()\r\n                } else {\r\n                    callVehiclePackagesAPI()\r\n                    try {\r\n                        arSelectPackage = ArrayList()\r\n                        for (i in 0 until adapterPackages.itemCount) {\r\n                            arSelectPackage.add(adapterPackages.getItem(i))\r\n                        }\r\n                        selectPackageStr = Gson().toJson(arSelectPackage)\r\n                        dialogPackage.show()\r\n                    } catch (e: Exception) {\r\n\r\n                    }\r\n                }\r\n            }\r\n            R.id.tvApplyPackage -> {\r\n                var packagesStr = \"\"\r\n                var isFirst = true\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    if (adapterPackages.getItem(i).isSelect == true || adapterPackages.getItem(i).isOtherSelect == true) {\r\n                        if (isFirst) {\r\n                            packagesStr = adapterPackages.getItem(i).packageName.toString()\r\n                            isFirst = false\r\n                        } else {\r\n                            packagesStr =\r\n                                packagesStr + \", \" + adapterPackages.getItem(i).packageName.toString()\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (packagesStr.length > 0) {\r\n                    val ignoreInventory = adapterPackages.getItem(0).isSelect == true\r\n                    if (!hasMatchPackage && !ignoreInventory) {\r\n                        showOtherInventoryEmptyDialog()\r\n                    } else {\r\n                        tvPackages.text = packagesStr\r\n                        tvErrorPackages.visibility = View.GONE\r\n                        setOptions(true)\r\n                        callOptionalAccessoriesAPI()\r\n\r\n                        dialogPackage.dismiss()\r\n                    }\r\n                } else {\r\n                    showApplyEmptyDialog()\r\n                }\r\n                prefOneDealNearYouData.packagesData = adapterPackages.getAll()\r\n                prefOneDealNearYouData.optionsData = ArrayList()\r\n                setPrefData()\r\n            }\r\n            R.id.tvCancelPackage -> {\r\n                val gson = Gson()\r\n                val type: Type = object : TypeToken<ArrayList<VehiclePackagesData>?>() {}.type\r\n                arSelectPackage = gson.fromJson(selectPackageStr, type)\r\n                for (i in 0 until arSelectPackage.size) {\r\n                    adapterPackages.update(i, arSelectPackage[i])\r\n                }\r\n                dialogPackage.dismiss()\r\n            }\r\n            R.id.llPackages -> {\r\n                // Log.e(\"select1\", selectPackageStr)\r\n                val pos = v.tag as Int\r\n\r\n                val data = adapterPackages.getItem(pos)\r\n                data.isSelect = !data.isSelect!!\r\n                adapterPackages.update(pos, data)\r\n                if (data.isSelect!! && pos == 0) {\r\n                    for (i in 1 until adapterPackages.itemCount) {\r\n                        val dataPackage = adapterPackages.getItem(i)\r\n                        dataPackage.isSelect = false\r\n                        dataPackage.isGray = false\r\n                        dataPackage.isOtherSelect = false\r\n                        adapterPackages.update(i, dataPackage)\r\n                    }\r\n                } else {\r\n                    for (i in 1 until adapterPackages.itemCount) {\r\n                        val dataPackage = adapterPackages.getItem(i)\r\n//                        dataPackage.isOtherSelect = false\r\n//                        dataPackage.isGray = false\r\n                        adapterPackages.update(i, dataPackage)\r\n                    }\r\n                    val data0 = adapterPackages.getItem(0)\r\n                    data0.isSelect = false\r\n                    adapterPackages.update(0, data0)\r\n                    if (!data0.isGray!!)\r\n                        callCheckedPackageAPI()\r\n                }\r\n\r\n\r\n                //  Log.e(\"clickupdate\", selectPackageStr)\r\n            }\r\n            R.id.tvResetPackage -> {\r\n                for (i in 0 until adapterPackages.itemCount) {\r\n                    val data = adapterPackages.getItem(i)\r\n                    data.isSelect = false\r\n                    data.isGray = false\r\n                    data.isOtherSelect = false\r\n                    adapterPackages.update(i, data)\r\n                }\r\n            }\r\n            R.id.tvApplyOption -> {\r\n                var optionsStr = \"\"\r\n                var isFirst = true\r\n                for (i in 0 until adapterOptions.itemCount) {\r\n                    if (adapterOptions.getItem(i).isSelect == true || adapterOptions.getItem(i).isOtherSelect == true) {\r\n                        if (isFirst) {\r\n                            optionsStr = adapterOptions.getItem(i).accessory.toString()\r\n                            isFirst = false\r\n                        } else {\r\n                            optionsStr =\r\n                                optionsStr + \", \" + adapterOptions.getItem(i).accessory.toString()\r\n                        }\r\n                    }\r\n                }\r\n                if (!TextUtils.isEmpty(optionsStr)) {\r\n                    val ignoreInventory = adapterOptions.getItem(0).isSelect == true\r\n                    if (!hasMatchOptions && !ignoreInventory) {\r\n                        showOtherInventoryEmptyDialog()\r\n                    } else {\r\n                        tvErrorOptionsAccessories.visibility = View.GONE\r\n                        tvOptionalAccessories.text = optionsStr\r\n                        dialogOptions.dismiss()\r\n                    }\r\n                } else {\r\n                    showApplyEmptyDialog()\r\n                }\r\n                prefOneDealNearYouData.optionsData = adapterOptions.getAll()\r\n                setPrefData()\r\n            }\r\n            R.id.tvResetOption -> {\r\n                for (i in 0 until adapterOptions.itemCount) {\r\n                    val data = adapterOptions.getItem(i)\r\n                    data.isSelect = false\r\n                    data.isGray = false\r\n                    data.isOtherSelect = false\r\n                    adapterOptions.update(i, data)\r\n                }\r\n            }\r\n            R.id.tvCancelOption -> {\r\n                val gson = Gson()\r\n                val type: Type = object : TypeToken<ArrayList<VehicleAccessoriesData>?>() {}.type\r\n                arSelectOption = gson.fromJson(selectOptionStr, type)\r\n                for (i in 0 until arSelectOption.size) {\r\n                    adapterOptions.update(i, arSelectOption[i])\r\n                }\r\n                dialogOptions.dismiss()\r\n            }\r\n            R.id.tvOptionalAccessories -> {\r\n                if (::adapterOptions.isInitialized) {\r\n                    try {\r\n                        arSelectOption = ArrayList()\r\n                        if (::adapterOptions.isInitialized) {\r\n                            for (i in 0 until adapterOptions.itemCount) {\r\n                                arSelectOption.add(adapterOptions.getItem(i))\r\n                            }\r\n                        }\r\n                        selectOptionStr = Gson().toJson(arSelectOption)\r\n                        dialogOptions.show()\r\n                    } catch (e: Exception) {\r\n\r\n                    }\r\n                } else {\r\n                    callOptionalAccessoriesAPI()\r\n                    try {\r\n                        arSelectOption = ArrayList()\r\n                        if (::adapterOptions.isInitialized) {\r\n                            for (i in 0 until adapterOptions.itemCount) {\r\n                                arSelectOption.add(adapterOptions.getItem(i))\r\n                            }\r\n                        }\r\n                        selectOptionStr = Gson().toJson(arSelectOption)\r\n                        dialogOptions.show()\r\n                    } catch (e: Exception) {\r\n\r\n                    }\r\n                }\r\n            }\r\n            R.id.llOptions -> {\r\n                //   Log.e(\"select1\", selectOptionStr)\r\n                val pos = v.tag as Int\r\n\r\n                val data = adapterOptions.getItem(pos)\r\n                data.isSelect = !data.isSelect!!\r\n                adapterOptions.update(pos, data)\r\n                if (data.isSelect!! && pos == 0) {\r\n                    for (i in 1 until adapterOptions.itemCount) {\r\n                        val dataOptions = adapterOptions.getItem(i)\r\n                        dataOptions.isSelect = false\r\n                        dataOptions.isOtherSelect = false\r\n                        dataOptions.isGray = false\r\n                        adapterOptions.update(i, dataOptions)\r\n                    }\r\n                } else {\r\n                    for (i in 1 until adapterOptions.itemCount) {\r\n                        val dataOptions = adapterOptions.getItem(i)\r\n//                        dataOptions.isOtherSelect = false\r\n//                        dataOptions.isGray = false\r\n                        adapterOptions.update(i, dataOptions)\r\n                    }\r\n                    val data0 = adapterOptions.getItem(0)\r\n                    data0.isSelect = false\r\n                    adapterOptions.update(0, data0)\r\n                    if (!data0.isGray!!)\r\n                        callCheckedAccessoriesAPI()\r\n                }\r\n                //   Log.e(\"clickupdate\", selectOptionStr)\r\n            }\r\n            R.id.tvYear -> {\r\n                noDealsFoundDialog()\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {\r\n        when (parent?.id) {\r\n            R.id.spYear -> {\r\n                val data = adapterYear.getItem(position) as VehicleYearData\r\n                yearId = data.vehicleYearID!!\r\n                yearStr = data.year!!\r\n                if (data.year != \"YEAR - NEW CARS\") {\r\n                    prefOneDealNearYouData.yearId = data.vehicleYearID\r\n                    prefOneDealNearYouData.yearStr = data.year\r\n                    prefOneDealNearYouData.makeId = \"\"\r\n                    prefOneDealNearYouData.modelId = \"\"\r\n                    prefOneDealNearYouData.trimId = \"\"\r\n                    prefOneDealNearYouData.extColorId = \"\"\r\n                    prefOneDealNearYouData.intColorId = \"\"\r\n                    prefOneDealNearYouData.makeStr = \"\"\r\n                    prefOneDealNearYouData.modelStr = \"\"\r\n                    prefOneDealNearYouData.trimStr = \"\"\r\n                    prefOneDealNearYouData.extColorStr = \"\"\r\n                    prefOneDealNearYouData.intColorStr = \"\"\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    callVehicleMakeAPI()\r\n                    setModel()\r\n                    setTrim()\r\n                    setExteriorColor()\r\n                    setInteriorColor()\r\n                    setPackages(false)\r\n                    setOptions(false)\r\n\r\n                }\r\n                AppGlobal.setSpinnerLayoutPos(position, spYear, requireActivity())\r\n            }\r\n            R.id.spMake -> {\r\n                val data = adapterMake.getItem(position) as VehicleMakeData\r\n                makeId = data.vehicleMakeID!!\r\n                makeStr = data.make!!\r\n                AppGlobal.setSpinnerLayoutPos(position, spMake, requireActivity())\r\n                if (data.make != \"MAKE\") {\r\n                    prefOneDealNearYouData.makeId = data.vehicleMakeID\r\n                    prefOneDealNearYouData.makeStr = data.make\r\n                    prefOneDealNearYouData.modelId = \"\"\r\n                    prefOneDealNearYouData.trimId = \"\"\r\n                    prefOneDealNearYouData.extColorId = \"\"\r\n                    prefOneDealNearYouData.intColorId = \"\"\r\n                    prefOneDealNearYouData.modelStr = \"\"\r\n                    prefOneDealNearYouData.trimStr = \"\"\r\n                    prefOneDealNearYouData.extColorStr = \"\"\r\n                    prefOneDealNearYouData.intColorStr = \"\"\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    callVehicleModelAPI()\r\n                    setTrim()\r\n                    setExteriorColor()\r\n                    setInteriorColor()\r\n                    setPackages(false)\r\n                    setOptions(false)\r\n\r\n                }\r\n            }\r\n            R.id.spModel -> {\r\n                val data = adapterModel.getItem(position) as VehicleModelData\r\n                modelId = data.vehicleModelID!!\r\n                modelStr = data.model!!\r\n                AppGlobal.setSpinnerLayoutPos(position, spModel, requireActivity())\r\n                if (data.model != \"MODEL\") {\r\n                    prefOneDealNearYouData.modelId = data.vehicleModelID\r\n                    prefOneDealNearYouData.modelStr = data.model\r\n                    prefOneDealNearYouData.trimId = \"\"\r\n                    prefOneDealNearYouData.extColorId = \"\"\r\n                    prefOneDealNearYouData.intColorId = \"\"\r\n                    prefOneDealNearYouData.trimStr = \"\"\r\n                    prefOneDealNearYouData.extColorStr = \"\"\r\n                    prefOneDealNearYouData.intColorStr = \"\"\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    callVehicleTrimAPI()\r\n                    setExteriorColor()\r\n                    setInteriorColor()\r\n                    setPackages(false)\r\n                    setOptions(false)\r\n\r\n                }\r\n            }\r\n            R.id.spTrim -> {\r\n                val data = adapterTrim.getItem(position) as VehicleTrimData\r\n                trimId = data.vehicleTrimID!!\r\n                trimStr = data.trim!!\r\n                AppGlobal.setSpinnerLayoutPos(position, spTrim, requireActivity())\r\n                if (data.trim != \"TRIM\") {\r\n                    prefOneDealNearYouData.trimId = data.vehicleTrimID\r\n                    prefOneDealNearYouData.trimStr = data.trim\r\n                    prefOneDealNearYouData.extColorId = \"\"\r\n                    prefOneDealNearYouData.intColorId = \"\"\r\n                    prefOneDealNearYouData.extColorStr = \"\"\r\n                    prefOneDealNearYouData.intColorStr = \"\"\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    callExteriorColorAPI()\r\n                    setInteriorColor()\r\n                    setPackages(false)\r\n                    setOptions(false)\r\n\r\n                }\r\n            }\r\n            R.id.spExteriorColor -> {\r\n                val data = adapterExterior.getItem(position) as ExteriorColorData\r\n//                extColorId = \"0\"\r\n                extColorId = data.vehicleExteriorColorID!!\r\n                extColorStr = data.exteriorColor!!\r\n                AppGlobal.setSpinnerLayoutPos(position, spExteriorColor, requireActivity())\r\n                if (data.exteriorColor != \"EXTERIOR COLOR\") {\r\n                    prefOneDealNearYouData.extColorId = data.vehicleExteriorColorID\r\n                    prefOneDealNearYouData.extColorStr = data.exteriorColor\r\n                    prefOneDealNearYouData.intColorId = \"\"\r\n                    prefOneDealNearYouData.intColorStr = \"\"\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    callInteriorColorAPI()\r\n                    setPackages(false)\r\n                    setOptions(false)\r\n\r\n                }\r\n            }\r\n            R.id.spInteriorColor -> {\r\n                val data = adapterInterior.getItem(position) as InteriorColorData\r\n\r\n                intColorId = data.vehicleInteriorColorID!!\r\n                intColorStr = data.interiorColor!!\r\n\r\n                AppGlobal.setSpinnerLayoutPos(position, spInteriorColor, requireActivity())\r\n                if (data.interiorColor != \"INTERIOR COLOR\") {\r\n                    prefOneDealNearYouData.intColorId = data.vehicleInteriorColorID\r\n                    prefOneDealNearYouData.intColorStr = data.interiorColor\r\n                    prefOneDealNearYouData.packagesData = ArrayList()\r\n                    prefOneDealNearYouData.optionsData = ArrayList()\r\n                    Constant.dismissLoader()\r\n                    setPrefData()\r\n                    setErrorVisibleGone()\r\n                    setPackages(true)\r\n                    callVehiclePackagesAPI()\r\n                    setOptions(false)\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onNothingSelected(parent: AdapterView<*>?) {\r\n\r\n    }\r\n\r\n    private lateinit var dialogPackage: Dialog\r\n    private fun popupPackages(data: ArrayList<VehiclePackagesData>) {\r\n        dialogPackage = Dialog(requireActivity(), R.style.FullScreenDialog)\r\n        dialogPackage.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialogPackage.setCancelable(true)\r\n        dialogPackage.setCanceledOnTouchOutside(true)\r\n        dialogPackage.setContentView(R.layout.dialog_vehicle_packages)\r\n        dialogPackage.run {\r\n            adapterPackages =\r\n                PackagesAdapter(R.layout.list_item_packages, this@OneDealNearYouFragment)\r\n            dialogPackage.rvPackages.adapter = adapterPackages\r\n            adapterPackages.addAll(data)\r\n\r\n            tvCancelPackage.setOnClickListener(this@OneDealNearYouFragment)\r\n            tvResetPackage.setOnClickListener(this@OneDealNearYouFragment)\r\n            tvApplyPackage.setOnClickListener(this@OneDealNearYouFragment)\r\n        }\r\n        setLayoutParam(dialogPackage)\r\n    }\r\n\r\n    private lateinit var dialogOptions: Dialog\r\n    private fun popupOptions(data: ArrayList<VehicleAccessoriesData>) {\r\n        dialogOptions = Dialog(requireActivity(), R.style.FullScreenDialog)\r\n        dialogOptions.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialogOptions.setCancelable(true)\r\n        dialogOptions.setCanceledOnTouchOutside(true)\r\n        dialogOptions.setContentView(R.layout.dialog_vehicle_options)\r\n        dialogOptions.run {\r\n            adapterOptions =\r\n                OptionsAdapter(R.layout.list_item_options, this@OneDealNearYouFragment)\r\n            rvOptions.adapter = adapterOptions\r\n            adapterOptions.addAll(data)\r\n\r\n            tvCancelOption.setOnClickListener(this@OneDealNearYouFragment)\r\n            tvResetOption.setOnClickListener(this@OneDealNearYouFragment)\r\n            tvApplyOption.setOnClickListener(this@OneDealNearYouFragment)\r\n        }\r\n        setLayoutParam(dialogOptions)\r\n    }\r\n\r\n    private fun setLayoutParam(dialog: Dialog) {\r\n        val layoutParams: WindowManager.LayoutParams = dialog.window?.attributes!!\r\n        dialog.window?.setLayout(\r\n            WindowManager.LayoutParams.MATCH_PARENT,\r\n            WindowManager.LayoutParams.MATCH_PARENT\r\n        )\r\n        dialog.window?.attributes = layoutParams\r\n    }\r\n\r\n    private fun callRefreshTokenApi() {\r\n        if (Constant.isOnline(requireActivity())) {\r\n            Constant.showLoader(requireActivity())\r\n            val request = java.util.HashMap<String, Any>()\r\n            request[ApiConstant.AuthToken] = pref?.getUserData()?.authToken!!\r\n            request[ApiConstant.RefreshToken] = pref?.getUserData()?.refreshToken!!\r\n\r\n            tokenModel.refresh(requireActivity(), request)!!.observe(this, { data ->\r\n                Constant.dismissLoader()\r\n                val userData = pref?.getUserData()\r\n                userData?.authToken = data.auth_token!!\r\n                userData?.refreshToken = data.refresh_token!!\r\n                pref?.setUserData(Gson().toJson(userData))\r\n                callSearchFindDealAPI()\r\n            }\r\n            )\r\n        } else {\r\n            Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private fun isValid(): Boolean {\r\n        when {\r\n            TextUtils.isEmpty(edtZipCode.text.toString().trim()) -> {\r\n                tvErrorZipCode.text = getString(R.string.enter_zipcode)\r\n                tvErrorZipCode.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            !isValidZipCode -> {\r\n                tvErrorZipCode.text = getString(R.string.invalid_zip_code)\r\n                tvErrorZipCode.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            yearStr == \"YEAR - NEW CARS\" -> {\r\n                tvErrorYear.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            tvYear.visibility == View.VISIBLE -> {\r\n                tvErrorYear.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            makeStr == \"MAKE\" -> {\r\n                tvErrorMake.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            modelStr == \"MODEL\" -> {\r\n                tvErrorModel.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            trimStr == \"TRIM\" -> {\r\n                tvErrorTrim.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            extColorStr == \"EXTERIOR COLOR\" -> {\r\n                tvErrorExterior.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n\r\n            intColorStr == \"INTERIOR COLOR\" -> {\r\n                tvErrorInterior.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n\r\n            tvPackages.text.toString().trim() == \"PACKAGES\" -> {\r\n                tvErrorPackages.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n            tvOptionalAccessories.text.toString().trim() == \"OPTIONS & ACCESSORIES\" -> {\r\n                tvErrorOptionsAccessories.visibility = View.VISIBLE\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    private fun setErrorVisibleGone() {\r\n        tvErrorYear.visibility = View.GONE\r\n        tvErrorModel.visibility = View.GONE\r\n        tvErrorMake.visibility = View.GONE\r\n        tvErrorTrim.visibility = View.GONE\r\n        tvErrorInterior.visibility = View.GONE\r\n        tvErrorExterior.visibility = View.GONE\r\n        tvErrorPackages.visibility = View.GONE\r\n        tvErrorOptionsAccessories.visibility = View.GONE\r\n    }\r\n\r\n    override fun onPause() {\r\n        if (Constant.isInitProgress() && Constant.progress.isShowing)\r\n            Constant.dismissLoader()\r\n        super.onPause()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        if (Constant.isInitProgress() && Constant.progress.isShowing)\r\n            Constant.dismissLoader()\r\n        super.onDestroy()\r\n    }\r\n\r\n    private fun setPrefOneDealNearYouData() {\r\n        try {\r\n            prefOneDealNearYouData = pref?.getOneDealNearYouData()!!\r\n            setYear()\r\n            setMake()\r\n            setModel()\r\n            setTrim()\r\n            setExteriorColor()\r\n            setInteriorColor()\r\n            setPackages(false)\r\n            setOptions(false)\r\n            if (!isEmpty(prefOneDealNearYouData.zipCode)) edtZipCode.setText(prefOneDealNearYouData.zipCode) else edtZipCode.setText(\r\n                \"\"\r\n            )\r\n            yearId = prefOneDealNearYouData.yearId!!\r\n            makeId = prefOneDealNearYouData.makeId!!\r\n            modelId = prefOneDealNearYouData.modelId!!\r\n            trimId = prefOneDealNearYouData.trimId!!\r\n            extColorId = prefOneDealNearYouData.extColorId!!\r\n            intColorId = prefOneDealNearYouData.intColorId!!\r\n            yearStr = prefOneDealNearYouData.yearStr!!\r\n            makeStr = prefOneDealNearYouData.makeStr!!\r\n            modelStr = prefOneDealNearYouData.modelStr!!\r\n            trimStr = prefOneDealNearYouData.trimStr!!\r\n            extColorStr = prefOneDealNearYouData.extColorStr!!\r\n            intColorStr = prefOneDealNearYouData.intColorStr!!\r\n\r\n\r\n            if (prefOneDealNearYouData.zipCode?.length!! >= 1) {\r\n                val str = prefOneDealNearYouData.zipCode.toString()\r\n                if (str.length == 5) {\r\n                    // callVehicleZipCodeAPI(str)\r\n\r\n                } else if (str.length < 5) {\r\n                    isValidZipCode = false\r\n                    prefOneDealNearYouData.isZipCode = isValidZipCode!!\r\n                    tvErrorZipCode.visibility = View.GONE\r\n                    edtZipCode.setBackgroundResource(R.drawable.bg_edittext_dark)\r\n                }\r\n//                prefOneDealNearYouData.zipCode = edtZipCode.text.toString().trim()\r\n//                setPrefData()\r\n            } else {\r\n                edtZipCode.setText(\"\")\r\n            }\r\n            onChangeZipCode()\r\n\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n    }\r\n\r\n    private fun showWarningDialog() {\r\n        val dialog = Dialog(requireActivity(), R.style.FullScreenDialog)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setCancelable(true)\r\n        dialog.setContentView(R.layout.dialog_car_not_available)\r\n        dialog.run {\r\n            clearOneDealNearData()\r\n            Handler().postDelayed({\r\n                dismiss()\r\n            }, 3000)\r\n        }\r\n        setLayoutParam(dialog)\r\n        dialog.show()\r\n    }\r\n\r\n    private fun clearOneDealNearData() {\r\n        pref?.setOneDealNearYou(\"\")\r\n        pref?.setOneDealNearYouData(Gson().toJson(PrefOneDealNearYouData()))\r\n        prefOneDealNearYouData = pref?.getOneDealNearYouData()!!\r\n    }\r\n\r\n    private fun showOtherInventoryEmptyDialog() {\r\n        val dialog = Dialog(requireContext(), R.style.FullScreenDialog)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setCancelable(true)\r\n        dialog.setContentView(R.layout.dialog_other_inventory_availability)\r\n        dialog.run {\r\n            Handler().postDelayed({\r\n                dismiss()\r\n            }, 3000)\r\n        }\r\n        setLayoutParam(dialog)\r\n        dialog.show()\r\n    }\r\n\r\n    private fun showApplyEmptyDialog() {\r\n        val dialog = Dialog(requireContext(), R.style.FullScreenDialog)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setCancelable(true)\r\n        dialog.setContentView(R.layout.dialog_inventory_availability)\r\n        dialog.run {\r\n            Handler().postDelayed({\r\n                dismiss()\r\n            }, 3000)\r\n        }\r\n        setLayoutParam(dialog)\r\n        dialog.show()\r\n    }\r\n\r\n    private fun showHighlightedDialog() {\r\n        val dialog = Dialog(requireContext(), R.style.FullScreenDialog)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setCancelable(true)\r\n        dialog.setContentView(R.layout.dialog_highlight_inventory)\r\n        dialog.run {\r\n            Handler().postDelayed({\r\n                dismiss()\r\n            }, 3000)\r\n        }\r\n        setLayoutParam(dialog)\r\n        dialog.show()\r\n    }\r\n\r\n    private fun noDealsFoundDialog() {\r\n        val dialog = Dialog(requireContext(), R.style.FullScreenDialog)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setCancelable(true)\r\n        dialog.setContentView(R.layout.dialog_highlight_inventory)\r\n        dialog.run {\r\n            tvMSG.text = getString(R.string.no_deals_found_in_your_area)\r\n            Handler().postDelayed({\r\n                dismiss()\r\n            }, 3000)\r\n        }\r\n        setLayoutParam(dialog)\r\n        dialog.show()\r\n    }\r\n\r\n    private lateinit var dialogMobileNo: Dialog\r\n    private fun dialogPhoneNo(isCancel: Boolean) {\r\n        dialogMobileNo = Dialog(requireActivity(), R.style.FullScreenDialog)\r\n        dialogMobileNo.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialogMobileNo.setCancelable(true)\r\n        dialogMobileNo.setContentView(R.layout.dialog_mobile_no)\r\n        Constant.onTextChange(\r\n            requireActivity(),\r\n            dialogMobileNo.edtPhoneNumber,\r\n            dialogMobileNo.tvErrorPhoneNo\r\n        )\r\n        dialogMobileNo.edtPhoneNumber.filters =\r\n            arrayOf<InputFilter>(filterSocMob, InputFilter.LengthFilter(13))\r\n        if (isCancel) {\r\n            dialogMobileNo.ivSocClose.visibility = View.VISIBLE\r\n        }\r\n        dialogMobileNo.run {\r\n            btnDialogSave.setOnClickListener {\r\n                if (TextUtils.isEmpty(edtPhoneNumber.text.toString().trim())) {\r\n                    Constant.setErrorBorder(edtPhoneNumber, tvErrorPhoneNo)\r\n                    tvErrorPhoneNo.text = getString(R.string.enter_phonenumber)\r\n                } else if (edtPhoneNumber.text.toString().trim().length != 13) {\r\n                    Constant.setErrorBorder(edtPhoneNumber, tvErrorPhoneNo)\r\n                    tvErrorPhoneNo.text = getString(R.string.enter_valid_phone_number)\r\n                } else {\r\n                    tvErrorPhoneNo.visibility = View.GONE\r\n                    callSocialMobileAPI(edtPhoneNumber.text.toString().trim())\r\n                    dismiss()\r\n                }\r\n            }\r\n            ivSocClose.setOnClickListener {\r\n                dismiss()\r\n            }\r\n        }\r\n        setLayoutParam(dialogMobileNo)\r\n        dialogMobileNo.show()\r\n    }\r\n\r\n    private fun callSocialMobileAPI(phoneNo: String) {\r\n        val data: LoginData = pref?.getUserData()!!\r\n        if (Constant.isOnline(requireActivity())) {\r\n            if (!Constant.isInitProgress()) {\r\n                Constant.showLoader(requireActivity())\r\n            } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                Constant.showLoader(requireActivity())\r\n            }\r\n            val request = HashMap<String, Any>()\r\n            request[ApiConstant.FirstNameSoc] = data.firstName!!\r\n            request[ApiConstant.LastNameSoc] = data.lastName!!\r\n            request[ApiConstant.UserNameSoc] = data.userName!!\r\n            request[ApiConstant.EmailSoc] = data.userName!!\r\n            request[ApiConstant.PhoneNumberSoc] = phoneNo\r\n\r\n            socialMobileViewModel.getSocialMobile(requireActivity(), request)!!\r\n                .observe(this, Observer { dataSocial ->\r\n                    Constant.dismissLoader()\r\n//                    data.authToken = dataSocial.authToken\r\n//                    data.refreshToken = dataSocial.refreshToken\r\n                    data.message = dataSocial.message\r\n                    if (data.buyerId != 0) {\r\n                        pref?.setLogin(true)\r\n                        data.isSocial = true\r\n                        pref?.setUserData(Gson().toJson(data))\r\n                        pref?.updateSocialMobile(true)\r\n                        callSearchFindDealAPI()\r\n                    } else {\r\n                        Toast.makeText(\r\n                            requireActivity(),\r\n                            resources.getString(R.string.login_failed),\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n                )\r\n        } else {\r\n            Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private var filterSocMob = InputFilter { source, start, end, dest, dstart, dend ->\r\n        dialogMobileNo.run {\r\n            var source = source\r\n            if (source.length > 0) {\r\n                if (!Character.isDigit(source[0])) return@InputFilter \"\" else {\r\n                    if (source.toString().length > 1) {\r\n                        val number = source.toString()\r\n                        val digits1 = number.toCharArray()\r\n                        val digits2 = number.split(\"(?<=.)\").toTypedArray()\r\n                        source = digits2[digits2.size - 1]\r\n                    }\r\n                    if (edtPhoneNumber.text.toString().isEmpty()) {\r\n                        return@InputFilter \"($source\"\r\n                    } else if (edtPhoneNumber.text.toString().length > 1 && edtPhoneNumber.text.toString()\r\n                            .length <= 3\r\n                    ) {\r\n                        return@InputFilter source\r\n                    } else if (edtPhoneNumber.text.toString().length > 3 && edtPhoneNumber.text.toString()\r\n                            .length <= 5\r\n                    ) {\r\n                        val isContain = dest.toString().contains(\")\")\r\n                        return@InputFilter if (isContain) {\r\n                            source\r\n                        } else {\r\n                            \")$source\"\r\n                        }\r\n                    } else if (edtPhoneNumber.text.toString().length > 5 && edtPhoneNumber.text.toString()\r\n                            .length <= 7\r\n                    ) {\r\n                        return@InputFilter source\r\n                    } else if (edtPhoneNumber.text.toString().length > 7) {\r\n                        val isContain = dest.toString().contains(\"-\")\r\n                        return@InputFilter if (isContain) {\r\n                            source\r\n                        } else {\r\n                            \"-$source\"\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n            }\r\n            source\r\n        }\r\n    }\r\n\r\n    private fun callPromotionAPI() {\r\n        if (Constant.isOnline(requireActivity())) {\r\n            if (!Constant.isInitProgress()) {\r\n                Constant.showLoader(requireActivity())\r\n            } else if (Constant.isInitProgress() && !Constant.progress.isShowing) {\r\n                Constant.showLoader(requireActivity())\r\n            }\r\n            promotionViewModel.getPromoCode(requireActivity())!!\r\n                .observe(requireActivity(), Observer { data ->\r\n                    try {\r\n                        if (TextUtils.isEmpty(data.promotionCode) || data.discount == 0.0 || TextUtils.isEmpty(\r\n                                data.endDate\r\n                            )\r\n                        ) {\r\n                            tvPromo.visibility = View.GONE\r\n                            llPromoOffer.visibility = View.GONE\r\n                        } else {\r\n                            tvPromo.visibility = View.VISIBLE\r\n                            binding.promoData = data\r\n                        }\r\n                    } catch (e: Exception) {\r\n\r\n                    }\r\n                }\r\n                )\r\n        } else {\r\n            Toast.makeText(requireActivity(), Constant.noInternet, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n\r\n    private fun setClearData() {\r\n        edtZipCode.setText(\"\")\r\n        setYear()\r\n        setMake()\r\n        setModel()\r\n        setTrim()\r\n        prefOneDealNearYouData = PrefOneDealNearYouData()\r\n        pref?.setOneDealNearYouData(Gson().toJson(prefOneDealNearYouData))\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/letyouknow/view/dealnearyou/OneDealNearYouFragment.kt b/app/src/main/java/com/letyouknow/view/dealnearyou/OneDealNearYouFragment.kt
--- a/app/src/main/java/com/letyouknow/view/dealnearyou/OneDealNearYouFragment.kt	(revision b92866ec20dfaa78b3b54f49864889b8a6d0b2bc)
+++ b/app/src/main/java/com/letyouknow/view/dealnearyou/OneDealNearYouFragment.kt	(date 1657003364671)
@@ -2108,4 +2108,8 @@
         pref?.setOneDealNearYouData(Gson().toJson(prefOneDealNearYouData))
     }
 
+    private fun setPrefLCDtoLYK(){
+        val prefLCD = pref?.getOneDealNearYou()
+    }
+
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AndroidLogFilters\">\r\n    <option name=\"TOOL_WINDOW_LOG_LEVEL\" value=\"verbose\" />\r\n    <option name=\"TOOL_WINDOW_CONFIGURED_FILTER\" value=\"Show only selected application\" />\r\n    <option name=\"TOOL_WINDOW_REGEXP_FILTER\" value=\"false\" />\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b7cf5390-1c44-4c19-bc4b-1fef53867b9d\" name=\"Default Changelist\" comment=\"- check negative re\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lcd/summary/LCDDealSummaryStep2Activity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lcd/summary/LCDDealSummaryStep2Activity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/unlockeddealdetail/UCDDealSummaryStep3Activity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/unlockeddealdetail/UCDDealSummaryStep3Activity.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[11a294fb]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Interface\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GenerateSignedApkSettings\">\r\n    <option name=\"EXPORT_PRIVATE_KEY\" value=\"false\" />\r\n    <option name=\"KEY_STORE_PATH\" value=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\keystore\\lyk_keystore.jks\" />\r\n    <option name=\"KEY_ALIAS\" value=\"lyk_keystore\" />\r\n    <option name=\"REMEMBER_PASSWORDS\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"LYK_80_Implement_app_wide_selection_functionality\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"26V1ObUhxMoziF9D5uQQUSHmQV0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"ApkExportedModule\" value=\"LetYouKnow.app\" />\r\n    <property name=\"BundleExportedModule\" value=\"LetYouKnow.app\" />\r\n    <property name=\"DEBUGGABLE_DEVICE\" value=\"realme-rmx2030-11a294fb\" />\r\n    <property name=\"DEBUGGABLE_PROCESS\" value=\"com.letyouknow\" />\r\n    <property name=\"DEBUGGER_ID\" value=\"Auto\" />\r\n    <property name=\"ExportApk.ApkPath\" value=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\" />\r\n    <property name=\"ExportApk.BuildVariants\" value=\"release\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"SHOW_ALL_PROCESSES\" value=\"false\" />\r\n    <property name=\"ToolWindowEmulator.ShowToolbar\" value=\"false\" />\r\n    <property name=\"android-custom-viewC:/Program Files/Java/jdk-17.0.1/caches/modules-2/files-2.1/com.cottacush/CurrencyEditText/0.0.3/9499052a1e52b868b03302a21e1d0308d55d696c/CurrencyEditText-0.0.3-sources.jar!/com/cottacush/android/currencyedittext/CurrencyEditText.kt_SELECTED\" value=\"CurrencyEditText\" />\r\n    <property name=\"android-custom-viewC:/Program Files/Java/jdk-17.0.1/caches/modules-2/files-2.1/com.wajahatkarim3.EasyMoney-Widgets/EasyMoney-Widgets/1.0.0/2e801e476feffd481497a6b5ac0de0bfc8f63679/EasyMoney-Widgets-1.0.0-sources.jar!/com/wajahatkarim3/easymoneywidgets/EasyMoneyEditText.java_SELECTED\" value=\"EasyMoneyEditText\" />\r\n    <property name=\"android-custom-viewC:/Users/Albiorix Technology/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.2.1/f0f93e67af3f7417bdd560d5142f6dec4fe629c3/recyclerview-1.2.1-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_RecyclerView_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewC:/Users/Albiorix Technology/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.2.1/f0f93e67af3f7417bdd560d5142f6dec4fe629c3/recyclerview-1.2.1-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_SELECTED\" value=\"RecyclerView\" />\r\n    <property name=\"android-custom-viewC:/Users/Albiorix Technology/AppData/Local/Android/Sdk/sources/android-31/android/view/View.java_SELECTED\" value=\"View\" />\r\n    <property name=\"android-custom-viewC:/Users/Albiorix Technology/AppData/Local/Android/Sdk/sources/android-31/android/view/View.java_View_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/CreditCardEditText.java_CreditCardEditText_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/CreditCardEditText.java_SELECTED\" value=\"CreditCardEditText\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ErrorEditText.java_ErrorEditText_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ErrorEditText.java_SELECTED\" value=\"ErrorEditText\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ExpirationDateEditText.java_ExpirationDateEditText_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ExpirationDateEditText.java_SELECTED\" value=\"ExpirationDateEditText\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ProductShowCaseWebView.java_ProductShowCaseWebView_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/ProductShowCaseWebView.java_SELECTED\" value=\"ProductShowCaseWebView\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/TouchImageView.java_SELECTED\" value=\"TouchImageView\" />\r\n    <property name=\"android-custom-viewE:/Albiorix/AlbiorixApplication/LetYouKnow/app/src/main/java/com/letyouknow/utils/TouchImageView.java_TouchImageView_DIMENSIONS\" value=\"1080&#10;1920\" />\r\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/app/src/main/res/drawable-anydpi\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/app/lib\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.17\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"run.code.analysis.last.selected.profile\" value=\"pProject Default\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"vcs.Subversion.SSH\" />\r\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\\lib\" />\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\\src\\main\\java\\com\\letyouknow\\utils\" />\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\\src\\main\\res\\drawable-v24\" />\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\" />\r\n    </key>\r\n    <key name=\"android.template.-1583338715\">\r\n      <recent name=\"com.letyouknow.view.splash\" />\r\n      <recent name=\"com.letyouknow.view.ucd.ucdstep1\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\Albiorix\\AlbiorixApplication\\LetYouKnow\\app\\lib\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.letyouknow.retrofit.viewmodel\" />\r\n    </key>\r\n    <key name=\"CopyKotlinDeclarationDialog.RECENTS_KEY\">\r\n      <recent name=\"com.letyouknow.view.spinneradapter\" />\r\n      <recent name=\"com.letyouknow.retrofit.viewmodel\" />\r\n      <recent name=\"com.letyouknow.retrofit.repository\" />\r\n      <recent name=\"com.letyouknow.utils\" />\r\n      <recent name=\"com.letyouknow.model\" />\r\n    </key>\r\n    <key name=\"android.template.87162493\">\r\n      <recent name=\"com.letyouknow.view.payment\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Android App.app\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"LetYouKnow.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Hybrid>\r\n      <Java />\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"samsungpay_2.5.00.jar\" type=\"JarApplication\" temporary=\"true\">\r\n      <option name=\"JAR_PATH\" value=\"$PROJECT_DIR$/app/lib/samsungpay_2.5.00.jar\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JAR Application.samsungpay_2.5.00.jar\" />\r\n        <item itemvalue=\"JAR Application.samsungpay_2.5.00.jar\" />\r\n        <item itemvalue=\"JAR Application.samsungpay_2.5.00.jar\" />\r\n        <item itemvalue=\"JAR Application.samsungpay_2.5.00.jar\" />\r\n        <item itemvalue=\"JAR Application.samsungpay_2.5.00.jar\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\Albiorix Technology\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b7cf5390-1c44-4c19-bc4b-1fef53867b9d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1647493913849</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1647493913849</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"- final code commit\">\r\n      <created>1653291945991</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653291945991</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"- final code commit\">\r\n      <created>1653296182782</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653296182782</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"- final code commit\">\r\n      <created>1653480905988</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653480905988</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"- final code commit\">\r\n      <created>1653481749844</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653481749844</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"- set pre populated data in ucd while select from LYK is in progress\">\r\n      <created>1655980516792</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655980516792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"- set price range api\">\r\n      <created>1655991589497</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655991589497</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"- set price range api\">\r\n      <created>1656063436269</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656063436269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"- set exterior and interior color id\">\r\n      <created>1656072523960</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656072523960</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"- set pref data\">\r\n      <created>1656078028457</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656078028457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"- user selected search radius should be carried over from the UCD into LYK too\">\r\n      <created>1656325193567</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656325193567</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"- set price range data\">\r\n      <created>1656326636368</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656326636368</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"- grouping data bby using Model\">\r\n      <created>1656420481538</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656420481538</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"- implement samsung payment gateway\">\r\n      <created>1656574964483</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656574964483</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"- implement samsung payment gateway\">\r\n      <created>1656655259249</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656655259249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"- set live url\">\r\n      <created>1656657917930</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656657917930</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"- remove merge code\">\r\n      <created>1656667293122</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656667293122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"- implement samsung pay code\">\r\n      <created>1656680438153</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656680438153</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"- implement samsung pay code\">\r\n      <created>1656681907318</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656681907318</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"- initialize master debug\">\r\n      <created>1656909663165</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656909663165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"- initialize master debug\">\r\n      <created>1656910017064</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656910017064</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"- set pref data in LYK,UCD and LCD\">\r\n      <created>1656942447611</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656942447611</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"- set pref data in LYK,UCD and LCD\">\r\n      <created>1656998264868</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656998264868</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"23\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"- final code commit\" />\r\n    <MESSAGE value=\"- set pre populated data in ucd while select from LYK is in progress\" />\r\n    <MESSAGE value=\"- set price range api\" />\r\n    <MESSAGE value=\"- set exterior and interior color id\" />\r\n    <MESSAGE value=\"- set pref data\" />\r\n    <MESSAGE value=\"- set promo data\" />\r\n    <MESSAGE value=\"- user selected search radius should be carried over from the UCD into LYK too\" />\r\n    <MESSAGE value=\"- set price range data\" />\r\n    <MESSAGE value=\"- grouping data bby using Model\" />\r\n    <MESSAGE value=\"- implement samsung payment gateway\" />\r\n    <MESSAGE value=\"- set live url\" />\r\n    <MESSAGE value=\"- remove merge code\" />\r\n    <MESSAGE value=\"- implement samsung pay code\" />\r\n    <MESSAGE value=\"- initialize master debug\" />\r\n    <MESSAGE value=\"- set pref data in LYK,UCD and LCD\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"- set pref data in LYK,UCD and LCD\" />\r\n    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n    <option name=\"REFORMAT_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n    <option name=\"REARRANGE_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UCDDealListStep1Activity.kt</url>\r\n          <line>377</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>26</line>\r\n          <option name=\"timeStamp\" value=\"89\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"90\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"91\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>44</line>\r\n          <option name=\"timeStamp\" value=\"92\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"93\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"94\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>50</line>\r\n          <option name=\"timeStamp\" value=\"95\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>54</line>\r\n          <option name=\"timeStamp\" value=\"96\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>61</line>\r\n          <option name=\"timeStamp\" value=\"97\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>62</line>\r\n          <option name=\"timeStamp\" value=\"98\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"99\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"100\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/ActiveMatchingDealRepository.kt</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"101\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRepository.kt</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"118\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRepository.kt</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"119\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRepository.kt</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"121\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRangeRepository.kt</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"128\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRangeRepository.kt</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"132\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRangeRepository.kt</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"152\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRangeRepository.kt</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"153\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/MinMSRPRangeRepository.kt</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"155\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"167\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>54</line>\r\n          <option name=\"timeStamp\" value=\"168\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>56</line>\r\n          <option name=\"timeStamp\" value=\"169\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>47</line>\r\n          <option name=\"timeStamp\" value=\"170\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"171\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/UnlockedCarDealAdapter.kt</url>\r\n          <line>50</line>\r\n          <option name=\"timeStamp\" value=\"172\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"201\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"202\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"203\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>19</line>\r\n          <option name=\"timeStamp\" value=\"204\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>20</line>\r\n          <option name=\"timeStamp\" value=\"205\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>25</line>\r\n          <option name=\"timeStamp\" value=\"206\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"207\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/CheckVehicleStockRepository.kt</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"210\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1285</line>\r\n          <option name=\"timeStamp\" value=\"241\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1286</line>\r\n          <option name=\"timeStamp\" value=\"242\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1287</line>\r\n          <option name=\"timeStamp\" value=\"243\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1288</line>\r\n          <option name=\"timeStamp\" value=\"244\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1284</line>\r\n          <option name=\"timeStamp\" value=\"245\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1093</line>\r\n          <option name=\"timeStamp\" value=\"258\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1094</line>\r\n          <option name=\"timeStamp\" value=\"259\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1095</line>\r\n          <option name=\"timeStamp\" value=\"260\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1882</line>\r\n          <option name=\"timeStamp\" value=\"313\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1881</line>\r\n          <option name=\"timeStamp\" value=\"314\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1876</line>\r\n          <option name=\"timeStamp\" value=\"315\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1879</line>\r\n          <option name=\"timeStamp\" value=\"316\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>1901</line>\r\n          <option name=\"timeStamp\" value=\"317\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/viewmodel/PromotionViewModel.kt</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"318\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/PromotionGeneralRepository.kt</url>\r\n          <line>41</line>\r\n          <option name=\"timeStamp\" value=\"319\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/PromotionGeneralRepository.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"320\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/PromotionGeneralRepository.kt</url>\r\n          <line>40</line>\r\n          <option name=\"timeStamp\" value=\"321\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>549</line>\r\n          <option name=\"timeStamp\" value=\"644\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>551</line>\r\n          <option name=\"timeStamp\" value=\"645\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>582</line>\r\n          <option name=\"timeStamp\" value=\"646\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>584</line>\r\n          <option name=\"timeStamp\" value=\"647\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>587</line>\r\n          <option name=\"timeStamp\" value=\"648\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>591</line>\r\n          <option name=\"timeStamp\" value=\"649\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>593</line>\r\n          <option name=\"timeStamp\" value=\"650\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>596</line>\r\n          <option name=\"timeStamp\" value=\"651\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>597</line>\r\n          <option name=\"timeStamp\" value=\"652\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>599</line>\r\n          <option name=\"timeStamp\" value=\"653\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep1Activity.kt</url>\r\n          <line>592</line>\r\n          <option name=\"timeStamp\" value=\"654\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/VehicleTrimRepository.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"660\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/VehicleTrimRepository.kt</url>\r\n          <line>43</line>\r\n          <option name=\"timeStamp\" value=\"661\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/VehicleTrimRepository.kt</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"662\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/VehicleTrimRepository.kt</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"663\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>537</line>\r\n          <option name=\"timeStamp\" value=\"664\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>538</line>\r\n          <option name=\"timeStamp\" value=\"665\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>539</line>\r\n          <option name=\"timeStamp\" value=\"666\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>558</line>\r\n          <option name=\"timeStamp\" value=\"668\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>748</line>\r\n          <option name=\"timeStamp\" value=\"699\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>747</line>\r\n          <option name=\"timeStamp\" value=\"700\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>746</line>\r\n          <option name=\"timeStamp\" value=\"701\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>556</line>\r\n          <option name=\"timeStamp\" value=\"702\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>355</line>\r\n          <option name=\"timeStamp\" value=\"703\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>406</line>\r\n          <option name=\"timeStamp\" value=\"704\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>403</line>\r\n          <option name=\"timeStamp\" value=\"705\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/summary/LYKStep2Activity.kt</url>\r\n          <line>426</line>\r\n          <option name=\"timeStamp\" value=\"706\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"707\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>36</line>\r\n          <option name=\"timeStamp\" value=\"708\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"709\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"710\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"711\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitDealRepository.kt</url>\r\n          <line>56</line>\r\n          <option name=\"timeStamp\" value=\"712\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/BuyerRepository.kt</url>\r\n          <line>38</line>\r\n          <option name=\"timeStamp\" value=\"713\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/BuyerRepository.kt</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"714\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/BuyerRepository.kt</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"715\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"716\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"717\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>36</line>\r\n          <option name=\"timeStamp\" value=\"718\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"719\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"720\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>47</line>\r\n          <option name=\"timeStamp\" value=\"721\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>50</line>\r\n          <option name=\"timeStamp\" value=\"722\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"723\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>58</line>\r\n          <option name=\"timeStamp\" value=\"724\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-line\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt</url>\r\n          <line>60</line>\r\n          <option name=\"timeStamp\" value=\"725\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"kotlin-function\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lyk/LYKFragment.kt</url>\r\n          <line>822</line>\r\n          <properties class=\"com.letyouknow.view.lyk.LYKFragment\" method=\"callOptionalAccessoriesAPI\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"669\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint suspend=\"THREAD\" type=\"dart-exception\" />\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b92866ec20dfaa78b3b54f49864889b8a6d0b2bc)
+++ b/.idea/workspace.xml	(date 1657002826074)
@@ -14,11 +14,8 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b7cf5390-1c44-4c19-bc4b-1fef53867b9d" name="Default Changelist" comment="- check negative re">
+    <list default="true" id="b7cf5390-1c44-4c19-bc4b-1fef53867b9d" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/retrofit/repository/SubmitPendingLCDDealRepository.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lcd/summary/LCDDealSummaryStep2Activity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/lcd/summary/LCDDealSummaryStep2Activity.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/unlockeddealdetail/UCDDealSummaryStep3Activity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/letyouknow/view/ucd/unlockeddealdetail/UCDDealSummaryStep3Activity.kt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -385,7 +382,14 @@
       <option name="project" value="LOCAL" />
       <updated>1656998264868</updated>
     </task>
-    <option name="localTasksCounter" value="23" />
+    <task id="LOCAL-00023" summary="- check negative result">
+      <created>1657002743396</created>
+      <option name="number" value="00023" />
+      <option name="presentableId" value="LOCAL-00023" />
+      <option name="project" value="LOCAL" />
+      <updated>1657002743399</updated>
+    </task>
+    <option name="localTasksCounter" value="24" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -408,7 +412,8 @@
     <MESSAGE value="- implement samsung pay code" />
     <MESSAGE value="- initialize master debug" />
     <MESSAGE value="- set pref data in LYK,UCD and LCD" />
-    <option name="LAST_COMMIT_MESSAGE" value="- set pref data in LYK,UCD and LCD" />
+    <MESSAGE value="- check negative result" />
+    <option name="LAST_COMMIT_MESSAGE" value="- check negative result" />
     <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
     <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
     <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
